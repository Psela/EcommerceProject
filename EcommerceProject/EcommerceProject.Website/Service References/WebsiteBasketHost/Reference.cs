//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EcommerceProject.Website.WebsiteBasketHost {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebsiteBasketHost.IBasket")]
    public interface IBasket {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasket/GetBasket", ReplyAction="http://tempuri.org/IBasket/GetBasketResponse")]
        System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int> GetBasket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasket/GetBasket", ReplyAction="http://tempuri.org/IBasket/GetBasketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int>> GetBasketAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasket/AddToBasket", ReplyAction="http://tempuri.org/IBasket/AddToBasketResponse")]
        void AddToBasket(EcommerceProject.DatabaseModel.ProductData product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasket/AddToBasket", ReplyAction="http://tempuri.org/IBasket/AddToBasketResponse")]
        System.Threading.Tasks.Task AddToBasketAsync(EcommerceProject.DatabaseModel.ProductData product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasket/EmptyBasket", ReplyAction="http://tempuri.org/IBasket/EmptyBasketResponse")]
        void EmptyBasket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasket/EmptyBasket", ReplyAction="http://tempuri.org/IBasket/EmptyBasketResponse")]
        System.Threading.Tasks.Task EmptyBasketAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasketChannel : EcommerceProject.Website.WebsiteBasketHost.IBasket, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasketClient : System.ServiceModel.ClientBase<EcommerceProject.Website.WebsiteBasketHost.IBasket>, EcommerceProject.Website.WebsiteBasketHost.IBasket {
        
        public BasketClient() {
        }
        
        public BasketClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasketClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int> GetBasket() {
            return base.Channel.GetBasket();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int>> GetBasketAsync() {
            return base.Channel.GetBasketAsync();
        }
        
        public void AddToBasket(EcommerceProject.DatabaseModel.ProductData product, int amount) {
            base.Channel.AddToBasket(product, amount);
        }
        
        public System.Threading.Tasks.Task AddToBasketAsync(EcommerceProject.DatabaseModel.ProductData product, int amount) {
            return base.Channel.AddToBasketAsync(product, amount);
        }
        
        public void EmptyBasket() {
            base.Channel.EmptyBasket();
        }
        
        public System.Threading.Tasks.Task EmptyBasketAsync() {
            return base.Channel.EmptyBasketAsync();
        }
    }
}
