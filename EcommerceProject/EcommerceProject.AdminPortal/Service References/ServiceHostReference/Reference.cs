//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EcommerceProject.AdminPortal.ServiceHostReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceHostReference.IDataRetrieverService")]
    public interface IDataRetrieverService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/ReadData", ReplyAction="http://tempuri.org/IDataRetrieverService/ReadDataResponse")]
        System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData> ReadData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/ReadData", ReplyAction="http://tempuri.org/IDataRetrieverService/ReadDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData>> ReadDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/SearchData", ReplyAction="http://tempuri.org/IDataRetrieverService/SearchDataResponse")]
        System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData> SearchData(string searchFor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/SearchData", ReplyAction="http://tempuri.org/IDataRetrieverService/SearchDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData>> SearchDataAsync(string searchFor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/CreateNewProductItem", ReplyAction="http://tempuri.org/IDataRetrieverService/CreateNewProductItemResponse")]
        void CreateNewProductItem(EcommerceProject.DatabaseModel.ProductData product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/CreateNewProductItem", ReplyAction="http://tempuri.org/IDataRetrieverService/CreateNewProductItemResponse")]
        System.Threading.Tasks.Task CreateNewProductItemAsync(EcommerceProject.DatabaseModel.ProductData product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/FindById", ReplyAction="http://tempuri.org/IDataRetrieverService/FindByIdResponse")]
        EcommerceProject.DatabaseModel.ProductData FindById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/FindById", ReplyAction="http://tempuri.org/IDataRetrieverService/FindByIdResponse")]
        System.Threading.Tasks.Task<EcommerceProject.DatabaseModel.ProductData> FindByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/RemoveById", ReplyAction="http://tempuri.org/IDataRetrieverService/RemoveByIdResponse")]
        void RemoveById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/RemoveById", ReplyAction="http://tempuri.org/IDataRetrieverService/RemoveByIdResponse")]
        System.Threading.Tasks.Task RemoveByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/UpdateProduct", ReplyAction="http://tempuri.org/IDataRetrieverService/UpdateProductResponse")]
        void UpdateProduct(EcommerceProject.DatabaseModel.ProductData newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/UpdateProduct", ReplyAction="http://tempuri.org/IDataRetrieverService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(EcommerceProject.DatabaseModel.ProductData newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/GetBasket", ReplyAction="http://tempuri.org/IDataRetrieverService/GetBasketResponse")]
        System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int> GetBasket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/GetBasket", ReplyAction="http://tempuri.org/IDataRetrieverService/GetBasketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int>> GetBasketAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/AddToBasket", ReplyAction="http://tempuri.org/IDataRetrieverService/AddToBasketResponse")]
        void AddToBasket(EcommerceProject.DatabaseModel.ProductData product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataRetrieverService/AddToBasket", ReplyAction="http://tempuri.org/IDataRetrieverService/AddToBasketResponse")]
        System.Threading.Tasks.Task AddToBasketAsync(EcommerceProject.DatabaseModel.ProductData product, int amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataRetrieverServiceChannel : EcommerceProject.AdminPortal.ServiceHostReference.IDataRetrieverService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataRetrieverServiceClient : System.ServiceModel.ClientBase<EcommerceProject.AdminPortal.ServiceHostReference.IDataRetrieverService>, EcommerceProject.AdminPortal.ServiceHostReference.IDataRetrieverService {
        
        public DataRetrieverServiceClient() {
        }
        
        public DataRetrieverServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataRetrieverServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataRetrieverServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataRetrieverServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData> ReadData() {
            return base.Channel.ReadData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData>> ReadDataAsync() {
            return base.Channel.ReadDataAsync();
        }
        
        public System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData> SearchData(string searchFor) {
            return base.Channel.SearchData(searchFor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EcommerceProject.DatabaseModel.ProductData>> SearchDataAsync(string searchFor) {
            return base.Channel.SearchDataAsync(searchFor);
        }
        
        public void CreateNewProductItem(EcommerceProject.DatabaseModel.ProductData product) {
            base.Channel.CreateNewProductItem(product);
        }
        
        public System.Threading.Tasks.Task CreateNewProductItemAsync(EcommerceProject.DatabaseModel.ProductData product) {
            return base.Channel.CreateNewProductItemAsync(product);
        }
        
        public EcommerceProject.DatabaseModel.ProductData FindById(string id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<EcommerceProject.DatabaseModel.ProductData> FindByIdAsync(string id) {
            return base.Channel.FindByIdAsync(id);
        }
        
        public void RemoveById(int id) {
            base.Channel.RemoveById(id);
        }
        
        public System.Threading.Tasks.Task RemoveByIdAsync(int id) {
            return base.Channel.RemoveByIdAsync(id);
        }
        
        public void UpdateProduct(EcommerceProject.DatabaseModel.ProductData newProduct) {
            base.Channel.UpdateProduct(newProduct);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(EcommerceProject.DatabaseModel.ProductData newProduct) {
            return base.Channel.UpdateProductAsync(newProduct);
        }
        
        public System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int> GetBasket() {
            return base.Channel.GetBasket();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<EcommerceProject.DatabaseModel.ProductData, int>> GetBasketAsync() {
            return base.Channel.GetBasketAsync();
        }
        
        public void AddToBasket(EcommerceProject.DatabaseModel.ProductData product, int amount) {
            base.Channel.AddToBasket(product, amount);
        }
        
        public System.Threading.Tasks.Task AddToBasketAsync(EcommerceProject.DatabaseModel.ProductData product, int amount) {
            return base.Channel.AddToBasketAsync(product, amount);
        }
    }
}
